#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
  require 'csvj_cli'
rescue LoadError
  STDERR.puts 'In development, you need to use `bundle exec bin/csvj_cli` to run your app'
  STDERR.puts 'At install-time, RubyGems will make sure lib, etc. are in the load path'
  STDERR.puts 'Feel free to remove this message from bin/csvj_cli now'
  exit 64
end

include GLI::App

program_desc 'Very simple utility for joining 2 csv files in an sql-like way'

version CsvjCli::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Joins two csv files'
command :join do |c|
  c.desc 'Path to the first csv file'
  c.default_value 'file1.csv'
  c.flag :file1

  c.desc 'Path to the second csv file'
  c.default_value 'file2.csv'
  c.flag :file2

  c.desc 'Path to the output result file'
  c.default_value 'output.csv'
  c.flag :output

  c.desc 'Path to diff output result file'
  c.default_value 'diff_output.csv'
  c.flag :diff_output

  c.default_value '1'
  c.flag :cols1

  c.default_value '1'
  c.flag :cols2

  c.action do |global_options, options, args|
    joiner = CsvJoiner.new
    joiner.join(
        {file1: options[:file1],
         file2: options[:file2],
         output_file: options[:output],
         diff_output_file: options[:diff_output],
         cols1: options[:cols1].split(',').map { |e| e.to_i },
         cols2: options[:cols2].split(',').map { |e| e.to_i }}
    )
  end

end

pre do |global, command, options, args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global, command, options, args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
